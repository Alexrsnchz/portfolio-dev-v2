---
import NavLinks from './NavLinks.astro';
import NavActions from "./NavActions.astro";

const { lang, t } = Astro.props;
---

<nav class="flex justify-center">
    <!-- Actual navbar -->
    <div id="navbar" class="flex justify-evenly items-center fixed top-0 z-50 px-1 md:px-8 py-4 mx-auto gap-15 md:gap-28 w-[90%] md:w-[62%] max-w-7xl rounded-lg border border-transparent bg-transparent transition-all duration-600 ease-in-out">
        <a href="#home" aria-label="Go to the home section" class="text-md md:text-lg leading-none font-semibold bg-gradient-to-r from-sky-300 dark:from-purple-500 via-rose-300 dark:via-pink-500 to-amber-400 dark:to-pink-500 bg-clip-text text-transparent">
            {"<Alexrsnchz />"}
        </a>

        <div class="hidden md:block">
            <NavLinks t={t} />
        </div>

        <NavActions lang={lang} />
    </div>
</nav>

<script>
    // Obtains navbar element
    const navbar = document.getElementById('navbar');

    // Transforms the navbar (with Tailwind classes) when the page is scrolled
    window.addEventListener('scroll', () => {
        const scrolled = window.scrollY > 10;

        navbar?.classList.toggle('border-transparent', !scrolled);
        navbar?.classList.toggle('border-gray-300', scrolled);
        navbar?.classList.toggle('dark:border-neutral-700', scrolled);
        navbar?.classList.toggle('bg-gray-200/30', scrolled);
        navbar?.classList.toggle('dark:bg-neutral-800/30', scrolled);
        navbar?.classList.toggle('backdrop-blur-md', scrolled);
        navbar?.classList.toggle('shadow-md', scrolled);
        navbar?.classList.toggle('translate-y-5', scrolled);
    });
</script>